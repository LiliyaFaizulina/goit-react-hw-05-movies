{"version":3,"file":"static/js/237.d38dffca.chunk.js","mappings":"wOAIaA,EAAoB,WAAoB,IAAnBC,EAAkB,uDAAP,GAC3C,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAeC,EAAAA,EAAAA,MAAPC,EAAR,EAAQA,GAkBR,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,WAAMC,GAAN,wFACYC,EAAAA,EAAAA,IAAeD,EAASZ,GADpC,OACTc,EADS,OAEfX,EAAaW,GAFE,2CAAH,sDAKdT,GAAa,GACb,IACEM,EAASF,EAKV,CAJC,MAAOH,GACPC,EAASD,EAAMS,QAChB,CAJD,QAKEV,GAAa,EACd,CACF,GAAE,CAACI,EAAIT,IAED,CAAEE,UAAAA,EAAWE,UAAAA,EAAWE,MAAAA,EAChC,C,oHCzBYU,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,EACND,EADMC,MAAOC,EACbF,EADaE,aAAcC,EAC3BH,EAD2BG,SAAUC,EACrCJ,EADqCI,YAAaC,EAClDL,EADkDK,aAAcC,EAChEN,EADgEM,OAE5DC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,MAInB,OACE,iCACE,mBAAQC,KAAK,SAASC,QALP,WAAO,IAAD,EACvBH,EAAU,iBAACF,QAAD,IAACA,OAAD,EAACA,EAAUM,MAAMC,YAAjB,QAAyB,IACpC,EAGG,sBAGA,gBAAKC,IAAG,0CAAqCX,GAAeY,IAAKf,KACjE,0BACGA,EADH,KACY,IAAIgB,KAAKf,GAAcgB,cADnC,QAGA,wCAAgBC,KAAKC,MAAqB,GAAff,GAA3B,SACA,oCAAYC,EAAOe,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,UAChD,sCACA,uBAAIpB,KACJ,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMqB,GAAG,OAAOX,MAAON,EAASM,MAAhC,qBAIF,yBACE,SAAC,KAAD,CAAMW,GAAG,UAAUX,MAAON,EAASM,MAAnC,4BAOT,E,SChBD,EAf0B,WACxB,OAAwC/B,EAAAA,EAAAA,KAAhCG,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,UAAWE,EAA9B,EAA8BA,MAE9B,OACE,gCACGF,IAAa,SAACsC,EAAA,EAAD,IACbxC,IAAa,SAACc,EAAD,CAAOC,MAAOf,IAC3BI,IAAS,mCACV,SAAC,EAAAqC,SAAD,CAAUC,UAAU,SAACF,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["hooks/useFetchMovieInfo.js","components/Movie/Movie.jsx","pages/MoviesDetailsPage/MoviesDetailsPage.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieById } from 'fetchAPI/fetchAPI';\n\nexport const useFetchMovieInfo = (endpoint = '') => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getMovie = async movieId => {\n      const movieDetails = await fetchMovieById(movieId, endpoint);\n      setMovieInfo(movieDetails);\n    };\n\n    setIsLoading(true);\n    try {\n      getMovie(id);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [id, endpoint]);\n\n  return { movieInfo, isLoading, error };\n};\n","import { useLocation, useNavigate, Link } from 'react-router-dom';\n\nexport const Movie = ({ movie }) => {\n  const { title, release_date, overview, poster_path, vote_average, genres } =\n    movie;\n  const location = useLocation();\n  const navigation = useNavigate();\n  const onBtnClick = () => {\n    navigation(location?.state.from ?? '/');\n  };\n  return (\n    <>\n      <button type=\"button\" onClick={onBtnClick}>\n        Go back\n      </button>\n      <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} />\n      <h2>\n        {title} ({new Date(release_date).getFullYear()})\n      </h2>\n      <p>User score: {Math.round(vote_average * 10)} %</p>\n      <p>Genres: {genres.map(({ name }) => name).join(', ')}</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={location.state}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={location.state}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { useFetchMovieInfo } from 'hooks/useFetchMovieInfo';\n\nimport { Movie } from 'components/Movie/Movie';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MoviesDetailsPage = () => {\n  const { movieInfo, isLoading, error } = useFetchMovieInfo();\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movieInfo && <Movie movie={movieInfo} />}\n      {error && <p>Ooops!</p>}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["useFetchMovieInfo","endpoint","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","error","setError","useParams","id","useEffect","getMovie","movieId","fetchMovieById","movieDetails","message","Movie","movie","title","release_date","overview","poster_path","vote_average","genres","location","useLocation","navigation","useNavigate","type","onClick","state","from","src","alt","Date","getFullYear","Math","round","map","name","join","to","Loader","Suspense","fallback"],"sourceRoot":""}