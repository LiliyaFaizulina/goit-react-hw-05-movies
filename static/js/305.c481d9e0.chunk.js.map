{"version":3,"file":"static/js/305.c481d9e0.chunk.js","mappings":"wSAEaA,EAAOC,EAAAA,GAAAA,KAAH,gFAKJC,EAASD,EAAAA,GAAAA,OAAH,6RACR,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,MAAnB,IACU,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,SAAnB,IAKD,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,SAAZ,IACA,SAAAL,GAAC,OAAIA,EAAEC,MAAMI,SAAZ,IACP,SAAAL,GAAC,OAAIA,EAAEC,MAAMI,SAAZ,IAEL,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,SAAnB,IACU,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,MAAnB,IACP,SAAAH,GAAC,OAAIA,EAAEC,MAAMK,MAAZ,IAINC,EAAQT,EAAAA,GAAAA,MAAH,4GACP,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,QAAnB,IACU,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,SAAnB,IAEF,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,MAAnB,I,SC2CtB,EA/DmB,WAAO,IAAD,EACvB,GAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAsCN,EAAAA,EAAAA,UAAS,IAA/C,eAAOO,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,sBAApB,QAAsC,GAkCjD,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMH,GAAN,8EAChBR,GAAa,GADG,mBAGOY,EAAAA,EAAAA,IAAmBJ,GAH1B,WAGRX,EAHQ,QAIFgB,OAJE,sBAKN,IAAIC,MAAM,SALJ,OAOdhB,EAAUD,GAPI,kDASdK,EAAS,KAAMa,SATD,yBAWdf,GAAa,GAXC,6EAAH,sDAeXQ,GACFG,EAAUH,EAEb,GAAE,CAACA,KAGF,UAAC,IAAD,YACE,UAACxB,EAAD,CAAMgC,SAlCW,SAAAC,GACnBA,EAAMC,iBACNX,EAAgB,CAAEJ,YAAAA,IAClBL,EAAU,IACVI,EAAS,KACV,EA6BG,WACE,SAACR,EAAD,CACEyB,KAAK,OACLC,KAAK,SACLC,MAAOlB,EACPmB,SAhCQ,SAAAC,GACdnB,EAAemB,EAAEC,OAAOH,MACzB,KAgCK,SAACnC,EAAD,wBAEDa,IAAa,SAAC0B,EAAA,EAAD,IACbxB,IACC,6GAKDJ,EAAOgB,OAAS,IAAK,SAACa,EAAA,EAAD,CAAY7B,OAAQA,MAG/C,C","sources":["pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\nexport const Button = styled.button`\n  color: ${p => p.theme.colors.violet};\n  background-color: ${p => p.theme.colors.lightBlue};\n  border: none;\n  font-size: 16px;\n  padding: 5px 15px;\n\n  transition: color ${p => p.theme.animation},\n    background-color ${p => p.theme.animation},\n    box-shadow ${p => p.theme.animation};\n  &:hover {\n    color: ${p => p.theme.colors.lightBlue};\n    background-color: ${p => p.theme.colors.violet};\n    box-shadow: ${p => p.theme.shadow};\n  }\n`;\n\nexport const Input = styled.input`\n  color: ${p => p.theme.colors.darkBlue};\n  background-color: ${p => p.theme.colors.lightBlue};\n  &:focus {\n    outline-color: ${p => p.theme.colors.violet};\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchMoviesByQuery } from 'fetchAPI/fetchAPI';\nimport { MainContainer } from 'utils/GlobalStyle';\nimport { Form, Button, Input } from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('searchQuery') ?? '';\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ searchQuery });\n    setMovies([]);\n    setError(null);\n  };\n\n  const onInput = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    const getMovies = async query => {\n      setIsLoading(true);\n      try {\n        const movies = await fetchMoviesByQuery(query);\n        if (!movies.length) {\n          throw new Error('Oops!');\n        }\n        setMovies(movies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (query) {\n      getMovies(query);\n    }\n  }, [query]);\n\n  return (\n    <MainContainer>\n      <Form onSubmit={onFormSubmit}>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          value={searchQuery}\n          onChange={onInput}\n        />\n        <Button>Search</Button>\n      </Form>\n      {isLoading && <Loader />}\n      {error && (\n        <p>\n          Sorry! We didn't find anything on your query! Change search params and\n          try again!\n        </p>\n      )}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </MainContainer>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["Form","styled","Button","p","theme","colors","violet","lightBlue","animation","shadow","Input","darkBlue","useState","movies","setMovies","isLoading","setIsLoading","error","setError","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMovies","fetchMoviesByQuery","length","Error","message","onSubmit","event","preventDefault","type","name","value","onChange","e","target","Loader","MoviesList"],"sourceRoot":""}