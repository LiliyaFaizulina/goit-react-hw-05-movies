{"version":3,"file":"static/js/667.a2b3ab6e.chunk.js","mappings":"0OA2DA,UArDmB,WAAO,IAAD,EACvB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAsCN,EAAAA,EAAAA,UAAS,IAA/C,eAAOO,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,sBAApB,QAAsC,GA6BjD,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMH,GAAN,wFACKI,EAAAA,EAAAA,IAAmBJ,GADxB,OACVX,EADU,OAEhBC,EAAUD,GAFM,2CAAH,sDAKf,GAAIW,EAAO,CACTR,GAAa,GACb,IACEW,EAAUH,EAKX,CAJC,MAAOP,GACPC,EAASD,EAAMY,QAChB,CAJD,QAKEb,GAAa,EACd,CACF,CACF,GAAE,CAACQ,KAGF,iCACE,kBAAMM,SA7BW,SAAAC,GACnBA,EAAMC,iBACNT,EAAgB,CAAEJ,YAAAA,GACnB,EA0BG,WACE,kBACEc,KAAK,OACLC,KAAK,SACLC,MAAOhB,EACPiB,SA7BQ,SAAAC,GACdjB,EAAeiB,EAAEC,OAAOH,MACzB,KA6BK,0CAEDpB,IAAa,SAAC,IAAD,IACbF,EAAO0B,OAAS,IAAK,SAAC,IAAD,CAAY1B,OAAQA,IACzCI,IAAS,mCAGf,C","sources":["pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchMoviesByQuery } from 'fetchAPI/fetchAPI';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('searchQuery') ?? '';\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ searchQuery });\n  };\n\n  const onInput = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    const getMovies = async query => {\n      const movies = await fetchMoviesByQuery(query);\n      setMovies(movies);\n    };\n\n    if (query) {\n      setIsLoading(true);\n      try {\n        getMovies(query);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, [query]);\n\n  return (\n    <>\n      <form onSubmit={onFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={searchQuery}\n          onChange={onInput}\n        />\n        <button>Search</button>\n      </form>\n      {isLoading && <Loader />}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {error && <p>Oops!</p>}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["useState","movies","setMovies","isLoading","setIsLoading","error","setError","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMovies","fetchMoviesByQuery","message","onSubmit","event","preventDefault","type","name","value","onChange","e","target","length"],"sourceRoot":""}